package templates

import "rinku/shortener"
import "fmt"

templ Default(message string) {
	<div>{ message }</div>
}

templ AdminMain(urls []shortener.URL, domain string) {
	@Base("Admin Control Panel") {
		<div class="mx-auto grid h-full min-h-dvh w-full max-w-[1400px] grid-cols-[auto_1fr] grid-rows-[auto_1fr] content-start gap-x-16 pt-4">
			<div class="col-span-2 flex justify-end">
				@LogoutButton()
			</div>
			<div class="pt-12">
				<h2 class="mb-4 text-4xl font-medium">Add New</h2>
				<div>
					<form id="new-url-form" method="post" action="/admin/new" class="grid gap-y-4" hx-post="/admin/new" hx-target="#urls" hx-swap="outerHTML" hx-select="#urls">
						<div class="flex items-center gap-2">
							{ domain }
							<label class="input">
								// <svg class="h-[1em] opacity-50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g stroke-linejoin="round" stroke-linecap="round" stroke-width="2.5" fill="none" stroke="currentColor"><path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"></path><path d="M14 2v4a2 2 0 0 0 2 2h4"></path></g></svg>
								<input type="text" name="slug" class="grow" placeholder="Slug (optional)" tabindex="1"/>
							</label>
						</div>
						<div class="join grid grid-cols-[auto_1fr]">
							<select class="select join-item" name="protocol" tabindex="0">
								<option value="https" selected>https</option>
								<option value="http">http</option>
							</select>
							<label class="input join-item">
								// <svg class="h-[1em] opacity-50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><g stroke-linejoin="round" stroke-linecap="round" stroke-width="2.5" fill="none" stroke="currentColor"><path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"></path><path d="M14 2v4a2 2 0 0 0 2 2h4"></path></g></svg>
								<input type="text" name="target" class="grow" placeholder="Target URL" tabindex="1" required/>
							</label>
						</div>
						<fieldset class="fieldset bg-base-100 border-base-300 rounded-box w-full border p-4">
							<label class="fieldset-label" tabindex="1">
								<input type="checkbox" name="hold" value="true" checked="checked" class="checkbox"/>
								Display Holding Message
							</label>
						</fieldset>
						<button class="btn btn-primary" tabindex="1">Add</button>
					</form>
				</div>
			</div>
			<div id="urls" class="grid w-full grid-cols-[auto_1fr_1fr_auto_auto_auto_auto] content-start pt-12">
				<div class="bg-base-300 py-4 ps-4 pe-8 font-medium break-all">ID</div>
				<div class="bg-base-300 px-8 py-4 font-medium">Slug</div>
				<div class="bg-base-300 px-8 py-4 font-medium">Target</div>
				<div class="bg-base-300 px-8 py-4 font-medium">Hold</div>
				<div class="bg-base-300 px-8 py-4 font-medium">Created At</div>
				<div class="bg-base-300 px-8 py-4 font-medium">Hits</div>
				<div class="bg-base-300 py-4 ps-8 pe-4 font-medium"></div>
				if len(urls) > 0 {
					for i := 0; i < len(urls); i++ {
						<div id={ "uuid-btn-" + urls[i].ID.String() } class="id border-b-base-content/30 w-full max-w-48 border-b py-4 ps-4 pe-8 break-all">
							<label class="me-1 cursor-pointer">
								<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="eye material-symbols:visibility-outline inline" viewBox="0 0 24 24">
									<path fill="currentColor" d="M12 16q1.875 0 3.188-1.312T16.5 11.5t-1.312-3.187T12 7T8.813 8.313T7.5 11.5t1.313 3.188T12 16m0-1.8q-1.125 0-1.912-.788T9.3 11.5t.788-1.912T12 8.8t1.913.788t.787 1.912t-.787 1.913T12 14.2m0 4.8q-3.65 0-6.65-2.037T1 11.5q1.35-3.425 4.35-5.462T12 4t6.65 2.038T23 11.5q-1.35 3.425-4.35 5.463T12 19m0-2q2.825 0 5.188-1.487T20.8 11.5q-1.25-2.525-3.613-4.012T12 6T6.813 7.488T3.2 11.5q1.25 2.525 3.613 4.013T12 17"></path>
								</svg>
								<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="eye-cancel material-symbols:visibility-off-outline inline" viewBox="0 0 24 24">
									<path fill="currentColor" d="m16.1 13.3l-1.45-1.45q.225-1.175-.675-2.2t-2.325-.8L10.2 7.4q.425-.2.863-.3T12 7q1.875 0 3.188 1.313T16.5 11.5q0 .5-.1.938t-.3.862m3.2 3.15l-1.45-1.4q.95-.725 1.688-1.587T20.8 11.5q-1.25-2.525-3.588-4.012T12 6q-.725 0-1.425.1T9.2 6.4L7.65 4.85q1.025-.425 2.1-.638T12 4q3.775 0 6.725 2.087T23 11.5q-.575 1.475-1.513 2.738T19.3 16.45m.5 6.15l-4.2-4.15q-.875.275-1.762.413T12 19q-3.775 0-6.725-2.087T1 11.5q.525-1.325 1.325-2.463T4.15 7L1.4 4.2l1.4-1.4l18.4 18.4zM5.55 8.4q-.725.65-1.325 1.425T3.2 11.5q1.25 2.525 3.588 4.013T12 17q.5 0 .975-.062t.975-.138l-.9-.95q-.275.075-.525.113T12 16q-1.875 0-3.188-1.312T7.5 11.5q0-.275.038-.525t.112-.525zm4.2 4.2"></path>
								</svg>
								<input type="checkbox" class="hidden"/>
							</label><a href={ templ.URL(fmt.Sprintf("/admin/analyze/%v", urls[i].ID.String())) } class="id-string underline">{ urls[i].ID.String() }</a>
						</div>
						<div class="border-b-base-content/30 border-b px-8 py-4 underline"><a href={ templ.URL(fmt.Sprintf("/%v", urls[i].Slug)) }>{ urls[i].Slug }</a></div>
						<div class="border-b-base-content/30 border-b px-8 py-4 underline"><a href={ templ.URL(urls[i].Target) }>{ urls[i].Target }</a></div>
						<div class="border-b-base-content/30 border-b px-8 py-4">
							if urls[i].HoldString() == "true" {
								<svg xmlns="http://www.w3.org/2000/svg" width="1.2em" height="1.2em" class="material-symbols:check-circle-outline" viewBox="0 0 24 24">
									<path fill="currentColor" d="m10.6 16.6l7.05-7.05l-1.4-1.4l-5.65 5.65l-2.85-2.85l-1.4 1.4zM12 22q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22m0-2q3.35 0 5.675-2.325T20 12t-2.325-5.675T12 4T6.325 6.325T4 12t2.325 5.675T12 20m0-8"></path>
								</svg>
							} else {
								<svg xmlns="http://www.w3.org/2000/svg" width="1.2em" height="1.2em" class="material-symbols:cancel-outline" viewBox="0 0 24 24">
									<path fill="currentColor" d="m8.4 17l3.6-3.6l3.6 3.6l1.4-1.4l-3.6-3.6L17 8.4L15.6 7L12 10.6L8.4 7L7 8.4l3.6 3.6L7 15.6zm3.6 5q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22m0-2q3.35 0 5.675-2.325T20 12t-2.325-5.675T12 4T6.325 6.325T4 12t2.325 5.675T12 20m0-8"></path>
								</svg>
							}
						</div>
						<div class="border-b-base-content/30 border-b px-8 py-4">{ urls[i].CreatedAtFormatted() }</div>
						<div class="border-b-base-content/30 border-b px-8 py-4">{ urls[i].HitsString() }</div>
						<div class="border-b-base-content/30 border-b py-4 ps-8 pe-4">
							<button
								aria-label="delete"
								class="hover:bg-primary hover:text-primary-content text-error cursor-pointer rounded-lg p-1"
								hx-post={ string(templ.URL(fmt.Sprintf("/admin/delete/%v", urls[i].ID.String()))) }
								hx-swap="innerHTML"
								hx-target="#urls"
								hx-select="#urls"
							>
								<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" class="material-symbols:delete-outline pointer-events-none" viewBox="0 0 24 24">
									<path fill="currentColor" d="M7 21q-.825 0-1.412-.587T5 19V6H4V4h5V3h6v1h5v2h-1v13q0 .825-.587 1.413T17 21zM17 6H7v13h10zM9 17h2V8H9zm4 0h2V8h-2zM7 6v13z"></path>
								</svg>
							</button>
						</div>
					}
				} else {
					<div class="col-span-7 w-full py-4 text-center">Nothing here!</div>
				}
				<script>
				(() => {
					document.getElementById("new-url-form").reset()
				})()
				</script>
			</div>
		</div>
	}
}

templ AdminAnalyze(hits []shortener.Hit) {
	@Base("Admin Control Panel") {
		<div class="mx-auto grid h-full min-h-dvh w-full max-w-[1400px] grid-rows-[auto_1fr] content-start pt-4">
			<div class="grid grid-cols-2">
				<div class="flex">
					<a href="/admin" class="flex items-center gap-2 underline">
						<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="material-symbols:arrow-left-alt-rounded" viewBox="0 0 24 24">
							<!-- Icon from Material Symbols by Google - https://github.com/google/material-design-icons/blob/master/LICENSE -->
							<path fill="currentColor" d="m7.85 13l2.85 2.85q.3.3.288.7t-.288.7q-.3.3-.712.313t-.713-.288L4.7 12.7q-.3-.3-.3-.7t.3-.7l4.575-4.575q.3-.3.713-.287t.712.312q.275.3.288.7t-.288.7L7.85 11H19q.425 0 .713.288T20 12t-.288.713T19 13z"></path>
						</svg>Back to Admin
					</a>
				</div>
				<div class="flex justify-end">
					@LogoutButton()
				</div>
			</div>
			<div id="urls" class="grid w-full grid-cols-[1fr_1fr_auto_auto_auto_auto_auto] content-start overflow-x-auto pt-12">
				// <div class="bg-base-300 py-4 ps-4 pe-8 font-medium break-all">ID</div>
				<div class="bg-base-300 ps-4 pe-8 py-4 font-medium">Referer</div>
				<div class="bg-base-300 px-8 py-4 font-medium">UA</div>
				<div class="bg-base-300 px-8 py-4 font-medium">Mobile</div>
				<div class="bg-base-300 px-8 py-4 font-medium">Platform</div>
				<div class="bg-base-300 px-8 py-4 font-medium">User Agent</div>
				<div class="bg-base-300 px-8 py-4 font-medium">IP</div>
				<div class="bg-base-300 ps-8 pe-4 py-4 font-medium">Created At</div>
				if len(hits) > 0 {
					for i := 0; i < len(hits); i++ {
						// <div class="border-b-base-content/30 border-b py-4 ps-4 pe-8">{ hits[i].ID.String() }</div>
						<div class="border-b-base-content/30 border-b ps-4 pe-8 py-4 break-words">
							if len(hits[i].Referer) > 0 {
								<a href={ templ.URL(hits[i].Referer) }>{ hits[i].Referer }</a>
							} else {
								{ hits[i].Referer }
							}
						</div>
						<div class="border-b-base-content/30 border-b px-8 py-4">{ hits[i].SecChUa }</div>
						<div class="border-b-base-content/30 border-b px-8 py-4">{ hits[i].SecChUaMobile }</div>
						<div class="border-b-base-content/30 border-b px-8 py-4">{ hits[i].SecChUaPlatform }</div>
						<div class="border-b-base-content/30 border-b px-8 py-4">{ hits[i].UserAgent }</div>
						<div class="border-b-base-content/30 border-b px-8 py-4">{ hits[i].IPAddrString() }</div>
						<div class="border-b-base-content/30 border-b ps-8 pe-4 py-4">{ hits[i].CreatedAtFormatted() }</div>
					}
				} else {
					<div class="col-span-7 w-full py-4 text-center">Nothing here!</div>
				}
			</div>
		</div>
	}
}

templ LogoutButton() {
	<a href="/admin/logout" class="flex gap-2 items-center underline">
		Logout
		<svg xmlns="http://www.w3.org/2000/svg" width="1.3em" height="1.3em" class="material-symbols:logout" viewBox="0 0 24 24">
			<path fill="currentColor" d="M5 21q-.825 0-1.412-.587T3 19V5q0-.825.588-1.412T5 3h7v2H5v14h7v2zm11-4l-1.375-1.45l2.55-2.55H9v-2h8.175l-2.55-2.55L16 7l5 5z"></path>
		</svg>
	</a>
}
